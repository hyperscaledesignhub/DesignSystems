apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-init
  namespace: proximity-service
data:
  init.sql: |
    CREATE DATABASE proximity_db;
    \c proximity_db;
    CREATE EXTENSION IF NOT EXISTS "uuid-ossp";
    
    CREATE TABLE businesses (
        id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
        name VARCHAR(255) NOT NULL,
        latitude DECIMAL(10, 8) NOT NULL,
        longitude DECIMAL(11, 8) NOT NULL,
        address VARCHAR(500),
        city VARCHAR(100),
        state VARCHAR(100),
        country VARCHAR(100),
        category VARCHAR(100),
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
    );
    
    CREATE TABLE geohash_index (
        geohash VARCHAR(12) NOT NULL,
        business_id UUID NOT NULL,
        PRIMARY KEY (geohash, business_id),
        FOREIGN KEY (business_id) REFERENCES businesses(id) ON DELETE CASCADE
    );
    
    CREATE INDEX idx_geohash ON geohash_index(geohash);
    CREATE INDEX idx_business_location ON businesses(latitude, longitude);
    CREATE INDEX idx_business_category ON businesses(category);
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
  namespace: proximity-service
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Gi
  storageClassName: fast-ssd
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres-primary
  namespace: proximity-service
spec:
  serviceName: postgres-primary
  replicas: 1
  selector:
    matchLabels:
      app: postgres-primary
  template:
    metadata:
      labels:
        app: postgres-primary
    spec:
      containers:
      - name: postgres
        image: postgres:15
        ports:
        - containerPort: 5432
          name: postgres
        env:
        - name: POSTGRES_PASSWORD
          value: "password"
        - name: PGPORT
          value: "5832"
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
        - name: init-script
          mountPath: /docker-entrypoint-initdb.d
        resources:
          requests:
            cpu: 2000m
            memory: 4Gi
          limits:
            cpu: 4000m
            memory: 8Gi
      volumes:
      - name: postgres-storage
        persistentVolumeClaim:
          claimName: postgres-pvc
      - name: init-script
        configMap:
          name: postgres-init
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-primary
  namespace: proximity-service
spec:
  ports:
  - port: 5832
    targetPort: 5832
  selector:
    app: postgres-primary